name: 'Cached Poetry Install Dependencies'
description: 'This action executes `poetry install` in a cached manner. It caches the created virtual environment for future use. The action assumes that poetry is already installed.'
inputs:
  rootdir:
    description: 'The path to the poetry root directory'
    required: false
    default: '.'
runs:
  using: "composite"
  steps:
    - name: Get Python Version
      id: get-python-version
      shell: bash
      run: echo "::set-output name=version::$(python --version | sed -e 's/^Python //')"
    - name: Load cached venv
      id: cached-poetry-dependencies
      uses: actions/cache@v2
      with:
        path: ${{ inputs.rootdir }}/.venv
        key: removeme10-venv-${{ runner.os }}-${{ steps.get-python-version.outputs.version }}-${{ hashFiles('**/poetry.lock') }}
    - name: Set poetry environment version
      shell: bash
      run: if [[ "${{ steps.cached-poetry-dependencies.outputs.cache-hit }}" != "true" ]]; then poetry env use ${{ steps.get-python-version.outputs.version }}; fi
      working-directory: ${{ inputs.rootdir }}
    - name: Install dependencies
      shell: bash
      run: if [[ "${{ steps.cached-poetry-dependencies.outputs.cache-hit }}" != "true" ]]; then poetry install --no-interaction --no-root; fi
      working-directory: ${{ inputs.rootdir }}
