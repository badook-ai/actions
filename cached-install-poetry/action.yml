name: 'Cached Install Poetry'
description: 'This action installs Poetry in a cached manner, as well as optionally installing poetry-dynamic-versioning. It assumes that Python is already installed on the runner.'
inputs:
  version:
    description: 'The poetry version to install'
    required: true
  dynamic-versioning:
    description: 'Should poetry dynamic versioning be installed'
    required: false
    default: false
  virtualenvs-create:
    description: "Whether Poetry should create a virtualenv or not"
    required: false
    default: "true"
  virtualenvs-in-project:
    description: "Whether Poetry should create virtualenvs in the project directory or not"
    required: false
    default: "true"
runs:
  using: "composite"
  steps:
    - name: Get Python Version
      id: get-python-version
      shell: bash
      run: echo "::set-output name=version::$(python --version | sed -e 's/^Python //')"
    - name: Load cached Poetry installation
      uses: actions/cache@v3
      with:
        path: ~/.local
        key: poetry-${{ inputs.version }}-${{ steps.get-python-version.outputs.version }}-install-with-dynamic-versioning-${{ inputs.dynamic-versioning }}
    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        version: ${{ inputs.version }}
        virtualenvs-create: ${{ inputs.virtualenvs-create }}
        virtualenvs-in-project: ${{ inputs.virtualenvs-in-project }}
    #--------------------------------------------------------------------------------
    #  Note: The installation method will change when plugins are supported:
    #  https://github.com/mtkennerly/poetry-dynamic-versioning/issues/39 is completed
    #--------------------------------------------------------------------------------
    - name: Install Poetry Dynamic Versioning
      shell: bash
      run: |
        source ~/.local/venv/bin/activate
        [[ "${{ inputs.dynamic-versioning }}" = true ]] && python -m pip install poetry-dynamic-versioning || true
