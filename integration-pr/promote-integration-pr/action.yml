name: "Promote Integration PR"
description: "This action promotes an integration PR from a 'draft' state to a 'ready' state."
inputs:
  integration_token:
    description: "GITHUB_TOKEN or a repo scoped PAT to access the integration repository."
    required: true
  integration_repository:
    description: "The integration repository to open a PR in"
    required: true
  integrated_component:
    description: "The name of the component being integrated"
    required: true
  transformation:
    description: "The bash transformation to perform on the integration repository (e.g. update version numbers)"
    required: true
  version:
    description: "The published artifact version"
    required: true
runs:
  using: "composite"
  steps:
    - name: Checkout the Integration Repository
      uses: actions/checkout@v2
      with:
        token: ${{ inputs.integration_token }}
        repository: ${{ inputs.integration_repository }}
    - name: Edit the required repository files
      shell: bash
      run: ${{ inputs.transformation }}
    - name: Update PR
      id: update-pr
      uses: peter-evans/create-pull-request@v4
      with:
        token: ${{ inputs.integration_token }}
        commit-message: "Update ${{ inputs.integrated_component }} version to '${{ inputs.version }}'"
        committer: badook Bot <badookbot@badook.ai>
        author: badook Bot <badookbot@badook.ai>
        branch: integration/${{ inputs.integrated_component }}/pr-${{ github.event.pull_request.number }}
        base: main
        title: "Update ${{ inputs.integrated_component }} version to '${{ inputs.version }}'"
        body: |
          This is an automated integration PR created for [${{ inputs.integrated_component }} PR #${{ github.event.pull_request.number }}](${{ github.event.pull_request.html_url }}).
          The PR content can be found below.

          **Title:** ${{ github.event.pull_request.title }}

          **Body:**
          ${{ github.event.pull_request.body }}
        assignees: ${{ github.event.sender.login }}
        reviewers: ${{ github.event.sender.login }}
        draft: false
    - name: Set PR as Ready for Review
      if: steps.update-pr.outputs.pull-request-operation == 'updated' # The PR will be created as ready for review if it was created at this stage
      shell: bash
      env:
        GITHUB_TOKEN: ${{ inputs.integration_token }}
      run: gh pr ready ${{ steps.update-pr.outputs.pull-request-number }}
